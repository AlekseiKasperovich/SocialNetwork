version: "3.3"
services:
  ui:
    build: WebApp/
    image: kasperovich/web
    container_name: web
    ports:
      - "8082:8082"
    depends_on:
      - backend
      - frontend
      - postgres
  frontend:
    build: RestApp/
    image: kasperovich/frontend
    container_name: frontend
    ports:
      - "8080:8080"
    depends_on:
      - backend
      - postgres
  backend:
    build: Backend/
    image: kasperovich/backend
    container_name: backend
    env_file:
      - ./.env.postgres
    ports:
      - "8081:8081"
    depends_on:
      - postgres
  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "54320:5432"
    env_file:
      - ./.env.postgres
    environment:
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_DB=${DB_SOCIAL:-social_network_db}
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  broker:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
